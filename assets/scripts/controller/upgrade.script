go.property("upgrade_cost", 100)
go.property("is_computer", 1)

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function add_device(self)
	if self.is_computer == 1 then
		print("add_device -> is_computer")
		msg.post("UI#windowSmall", "add_computer", { upgrade_cost = self.upgrade_cost })
	elseif self.is_computer == 0 then
		print("add_device -> is_server")
		msg.post("UI#windowSmall", "add_server", { upgrade_cost = self.upgrade_cost })
	end
end

function fixed_update(self, dt)
	-- This function is only called if 'Use Fixed Timestep' is enabled in the Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
	if action_id == hash("touch") and action.pressed then
		local clickPosition = action
		local iconPosition = go.get_position("#go")
		local sprite = go.get("#sprite", "size")

		--print("mouse click pos x: " .. action.x)
		--print("mouse click pos y: " .. action.y)

		--print("positionIcon: " .. iconPosition)
		--print("sprite measurements: " .. sprite)

		if clickPosition.x > (iconPosition.x - sprite.x/2) and clickPosition.x < (iconPosition.x + sprite.x/2) and 
		clickPosition.y > (iconPosition.y - sprite.y/2) and clickPosition.y < (iconPosition.y + sprite.x/2) then
			add_device(self)
		end		
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
